The script TEI2CoNLL.py converts the .xml files into a .conll format. This is necessary for further analysis of the data with machine learning algorithms. Furthermore, the script has different filter options so that different outputs with different data can be generated. The filter options include the display of data with and without Isnad, the marking of NERs, subtopics and topics.
 
The script has 15 different functions that perform different tasks. The individual functions and how they work can be seen in the code. The script first reads all .xml files in the defined input folder. Then the .xml files are merged into one large .xml file. Then, within the merged .xml file, NERs, subtopics, topics and isnads are marked if the appropriate flags have been set. While the topics are read at the beginning of each paragraph and prefixed to the paragraph, the NERs, subtopic and isnad tags are each defined within the text with a start and an end tag. The current output contains only the markings and the Arabic text and is cleaned up for further processing. Within the output, the words of the file are now arranged line by line.

Next, the NER tags in the file are converted into a BIO format. Beginning NER tags are marked as B-[NER] and following ones with an I-[NER]. Then the sentences that are too long are separated. The sentences that are currently only separated by the given paragraphs will be separated again if they exceed a certain length. The topics defined at the beginning of each paragraph are assigned to the separated parts of the sentence. Paragraphs that do not have a topic defined are assigned 'nil'. Next, the subtopics are converted into the same BIO format as the NERs. Then, all records that do not contain NERs are deleted from the file. Finally, the data of the file is saved in three files (dev.conll, test.conll, train.conll). The distribution of the files to the three files is randomised or can be predefined according to a distribution. Furthermore, the form of the topics is adapted in the output files.

The data to be extracted from the .xml files, i.e. NER, Subtopics, Topics, Isnade, can be set by flags. However, the execution order of the individual functions can be changed. This is only one of several possibilities and can also be done differently. In the output, the data are now listed in a matrix. At the beginning of each record are the topics. All topics are always listed. If the topic occurs in the following sentence, it has the value 1, otherwise the value 0. Words with a NER (PER, LOC, ORG, TME, OTH) are marked with this in the BIO format, otherwise the words have the value O. The words are in column 0, the NERs in column 1. The subtopics follow in column 2. These are also marked in the BIO form and otherwise have the value O. 

The function could be extended as desired so that, for example, not only the first level of the subtopics is taken into account and only the first one, but further defined subtopics and levels of subtopics could be included in the matrix. This would allow even further and more in-depth analysis possibilities for machine learning.
